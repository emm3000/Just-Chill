CREATE TABLE transactions (
    transactionId TEXT NOT NULL PRIMARY KEY,
    type TEXT NOT NULL,
    amount REAL NOT NULL,
    description TEXT NOT NULL,
    date INTEGER NOT NULL,
    syncStatus TEXT NOT NULL,
    categoryId TEXT,
    accountId TEXT NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES categories(categoryId) ON DELETE SET NULL,
    FOREIGN KEY (accountId) REFERENCES accounts(accountId) ON DELETE CASCADE
);

updateValues:
UPDATE transactions
SET
    type = ?,
    amount = ?,
    description = ?,
    date = ?,
    syncStatus = ?
WHERE
    transactionId = ?;

updateStatus:
UPDATE transactions
SET
    syncStatus = ?
WHERE
    transactionId = ?;

count:
SELECT COUNT(*) AS transactionsCount FROM transactions;

sumAllIncomeAmounts:
SELECT SUM(amount) AS totalIncome
FROM transactions
WHERE type = 'INCOME' AND syncStatus != 'PENDING_DELETE';

sumAllSpendAmounts:
SELECT SUM(amount) AS totalIncome
FROM transactions
WHERE type = 'SPENT' AND syncStatus != 'PENDING_DELETE';

difference:
SELECT (
    COALESCE((SELECT SUM(amount) FROM transactions WHERE type = 'INCOME' AND syncStatus != 'PENDING_DELETE'), 0)
    - COALESCE((SELECT SUM(amount) FROM transactions WHERE type = 'SPENT' AND syncStatus != 'PENDING_DELETE'), 0)
) AS incomeMinusSpent;

retrieveAll:
SELECT * FROM transactions WHERE syncStatus != 'PENDING_DELETE' ORDER BY date DESC;

addTransaction:
INSERT OR REPLACE INTO transactions VALUES(?, ?, ?, ?, ?, ?, ?, ?);

find:
SELECT * FROM transactions WHERE transactionId = ?;

delete:
DELETE FROM transactions WHERE transactionId = ?;
